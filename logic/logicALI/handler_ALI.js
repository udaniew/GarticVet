const mp4 = {
    //AB-AG
    'abacate': ['mp4ALI/abacate.mp4'],
    'abacaxi': ['mp4ALI/abacaxi.mp4'],
    'abiu': ['mp4ALI/abiu.mp4'],
    'ab√≥bora': ['mp4ALI/ab√≥bora.mp4'],
    'ab√≥bora jacarezinho': ['mp4ALI/ab√≥bora_jacarezinho.mp4'],
    'abobrinha': ['mp4ALI/abobrinha.mp4'],
    'abric√≥': ['mp4ALI/abric√≥.mp4'],
    'a√ßafr√£o': ['mp4ALI/a√ßafr√£o.mp4'],
    'a√ßa√≠': ['mp4ALI/a√ßa√≠.mp4'],
    'acaraj√©': ['mp4ALI/acaraj√©.mp4'],
    'acelga': ['mp4ALI/acelga.mp4'],
    'acerola': ['mp4ALI/acerola.mp4'],
    'achocolatado': ['mp4ALI/achocolatado.mp4'],
    'a√ß√∫car': ['mp4ALI/a√ß√∫car.mp4'],
    'a√ß√∫car mascavo': ['mp4ALI/a√ß√∫car_mascavo.mp4'],
    'ado√ßante': ['mp4ALI/ado√ßante.mp4'],
    'agri√£o': ['mp4ALI/agri√£o.mp4'],
    '√°gua': ['mp4ALI/√°gua.mp4'],
    '√°gua com g√°s': ['mp4ALI/√°gua_com_g√°s.mp4'],
    '√°gua de coco': ['mp4ALI/√°gua_de_coco.mp4'],
 
    //AG-AM
    

    
    

};

let words = Object.keys(mp4);

function shuffle(array) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
    }
}

shuffle(words);
let currentIndex = 0;
let score = 0;
let soundEnabled = true;

const mp4Container = document.getElementById('mp4-container');
const mp4Element = document.getElementById('mp4');
const placeholder = document.getElementById('placeholder');
const userInput = document.getElementById('user-input');
const correctSound = document.getElementById('correct-sound');
const scoreElement = document.getElementById('score');
const searchButton = document.getElementById('search-button');
const searchModal = document.getElementById('search-modal');
const searchInput = document.getElementById('search-input');
const searchSubmit = document.getElementById('search-submit');
const searchResult = document.getElementById('search-result');
const closeSearchModal = document.getElementById('close-search-modal');
const soundToggle = document.getElementById('sound-toggle');
const infoButton = document.getElementById('info-button');
const infoModal = document.getElementById('info-modal');
const closeInfoModal = document.getElementById('close-info-modal');

let inactivityTimeout;

function loadNextMp4() {
if (currentIndex < words.length) {
    const currentWord = words[currentIndex];
    const videos = mp4[currentWord];
    const randomVideo = videos[Math.floor(Math.random() * videos.length)];
    mp4Element.src = randomVideo;
    mp4Element.style.display = 'block';
    placeholder.style.display = 'none';
    userInput.value = '';
    userInput.focus();

    // Revela a palavra correta no console para depura√ß√£o
    console.log(`Palavra correta para o v√≠deo atual: ${currentWord}`);

    // Reseta a exibi√ß√£o da resposta
    clearTimeout(inactivityTimeout);
    document.getElementById('answerReveal').style.display = 'none';

    // Inicia o timer para revelar a resposta correta ap√≥s 10 segundos
    inactivityTimeout = setTimeout(() => {
        document.getElementById('answerReveal').textContent = currentWord;
        document.getElementById('answerReveal').style.display = 'inline-block';
    }, 10000); // alterne o valor de espera para a respota aqui.

    mp4Element.play().catch(error => {
        console.log('Reprodu√ß√£o autom√°tica falhou:', error);
    });
} else {
    shuffle(words);
    currentIndex = 0;
    loadNextMp4();
}
}

userInput.addEventListener('keypress', (event) => {
if (event.key === 'Enter') {
const userText = userInput.value.trim().toLowerCase();
if (userText === words[currentIndex]) {
    currentIndex++;
    score++;
    scoreElement.textContent = score;
    if (soundEnabled) {
        correctSound.play();
    }
    loadNextMp4();
    
    // Aumenta a luminosidade do cont√™iner
    mp4Container.style.boxShadow = '0 0 60px 20px rgba(255, 255, 255, 1)';
    setTimeout(() => {
        mp4Container.style.boxShadow = '0 0 60px 20px rgba(255, 255, 255, 0.8)';
    }, 1000);
} else {
    userInput.value = '';
}
}
});

function attemptAutoPlay() {
    const playPromise = mp4Element.play();
    if (playPromise !== undefined) {
        playPromise.then(() => {
            console.log('Reprodu√ß√£o autom√°tica bem-sucedida');
        }).catch(error => {
            console.log('Reprodu√ß√£o autom√°tica falhou:', error);
        });
    }
}

mp4Element.addEventListener('canplaythrough', attemptAutoPlay);

loadNextMp4();

searchButton.addEventListener('click', () => {
    searchModal.style.display = 'flex';
    searchInput.value = '';
    searchResult.textContent = '';
    searchInput.focus();
});

closeSearchModal.addEventListener('click', () => {
    searchModal.style.display = 'none';
});

searchSubmit.addEventListener('click', () => {
    const searchText = searchInput.value.trim().toLowerCase();
    if (mp4[searchText]) {
        const videos = mp4[searchText];
        const randomVideo = videos[Math.floor(Math.random() * videos.length)];
        searchResult.innerHTML = `<video src="${randomVideo}" controls width="100%"></video>`;
        
        // Aumenta a luminosidade do cont√™iner
        mp4Container.style.boxShadow = '0 0 60px 20px rgba(255, 255, 255, 1)';
        setTimeout(() => {
            mp4Container.style.boxShadow = '0 0 60px 20px rgba(255, 255, 255, 0.8)';
        }, 1000);
    } else {
        searchResult.textContent = 'Alimento ainda n√£o dispon√≠vel';
    }
});

searchInput.addEventListener('keypress', (event) => {
if (event.key === 'Enter') {
searchSubmit.click();
}
});

soundToggle.addEventListener('click', () => {
    soundEnabled = !soundEnabled;
    soundToggle.textContent = soundEnabled ? 'üîä' : 'üîá';
});

infoButton.addEventListener('click', () => {
    infoModal.style.display = 'flex';
});

closeInfoModal.addEventListener('click', () => {
    infoModal.style.display = 'none';
});


//c√≥digo responsavel por exibir frases aleatorias 
// Lista de frases. Voc√™ pode adicionar quantas quiser aqui.
const backgroundWords = [

    "continue tentando!",
    "cada erro √© uma li√ß√£o.",
    "a pr√°tica leva √† perfei√ß√£o.",
    "o primeiro tra√ßo √© importante",
    "observe o primeiro tra√ßo!",
    "ou√ßa m√∫sicas enquanto joga!",
    "at√© mesmo a cor dos desenhos √© importante!",
    "se atente aos detalhes √∫nicos de cada desenho",
    "Gartic √© apenas um jogo, n√£o d√™ sua vida nisso",
    "digitar devagar √© essencial √†s vezes",
    "seu feedback √© importante",
    "as pessoas realmente leem isso?",
    "voc√™ pode fazer melhor",
    "a verdadeira vit√≥ria vem com o desafio!",
    "voc√™ est√° ficando para tr√°s, que tal digitar mais r√°pido?",
    "Voc√™ est√° evoluindo",
    "que tal errar menos?",
    "syuz f√£ de daniewz",
    "seu desempenho √© fraco",
    "voc√™ continua falhando",
    "quanto mais pr√°tica, melhor!",
    "Voc√™ est√° tentando, mas parece in√∫til",
    "Voc√™ est√° longe de dominar.",
    "pausas s√£o necess√°rias!",
    "entre no servidor do discord",
    "percep√ß√£o √© necess√°rio",
    "n√£o √© sobre velocidade, √†s vezes",
    "at√© mesmo o hardware importa",
    "jogar com conex√µes cabeadas ser√° sempre vantajoso",
    "o mal tem uma falsa vit√≥ria sobre o bem",
    "tenha paci√™ncia com as pessoas",
    "voc√™ tamb√©m j√° foi noob",
    "que tal ser menos arrogante?",
    "n√£o perca seu tempo com assuntos frivolos",
    "estrela do sul",
    "uma estrela que brilhou intensamente no meu c√©u..",
    "compartilhe nosso servidor",
    "convide pessoas para aprender",
    "convide pessoas para praticar",
    "certas coisas s√£o inevit√°veis",
    "se coloque no lugar dos outros",
    "tenha empatia",
    "reconhe√ßa o esfor√ßo dos outros",
    "a humildade precede a honra",
    "seja esperto",
    "seja gentil consigo mesmo (a)",
    "evite assuntos demasiadamente superficiais",
    "se valorize como pessoa",
    "feito por daniewz e denni_0014",
    "digite o mais rapido poss√≠vel!",
    "pessoas de sucesso definem metas realistas",
    "uma longa viagem come√ßa por um passo",
    "o melhor modo de prever o futuro √© cri√°-lo - Peter Drucker",
    "pratique sua digita√ß√£o!",
    "seja mais r√°pido ou desista",
    "erros demais, foco!",
    "n√£o consegue fazer melhor?",
    "tente n√£o errar",
    "voc√™ √© realmente lento",
    "esse √© seu m√°ximo?",
    "mais foco, menos erro!",
    "sites para praticar digita√ß√£o: 10fastfingers, monkeytype",
    "a vida √© simples, n√≥s √© que complicamos. - Conf√∫cio",
    "a coragem √© a primeira qualidade humana, pois garante as outras. - Arist√≥teles",
    "sem m√∫sica, a vida seria um erro",
    "atualiza√ß√µes ser√£o fornecidas atrav√©s deste site",
    "estar ciente das suas limita√ß√µes j√° √© estar al√©m delas - hegel",
    "garota, voc√™ √© interestelar! Nem a estrela mais linda tem a luz que c√™ tem!",
    "as estrelas apareceram na minha frente quando eu recebi seu abra√ßo!",
    "O jogo est√° dispon√≠vel como app para Windows, Android e vers√£o web!",


    





];

// Fun√ß√£o para criar um elemento de palavra
function createWordElement(text) {
    const wordElement = document.createElement('div');
    wordElement.textContent = text;
    wordElement.className = 'background-word';

    // Adiciona ao corpo para medir seu tamanho
    document.body.appendChild(wordElement);

    const wordWidth = wordElement.offsetWidth;
    const wordHeight = wordElement.offsetHeight;

    // Remove o elemento ap√≥s medir
    wordElement.remove();

    // Gera uma posi√ß√£o aleat√≥ria dentro da tela
    const windowWidth = window.innerWidth;
    const windowHeight = window.innerHeight;

    let x, y;

    // Gera posi√ß√£o aleat√≥ria com base nas bordas da tela
    const positionChoice = Math.floor(Math.random() * 8);

    switch (positionChoice) {
        case 0: // Canto superior esquerdo
            x = Math.min(10, windowWidth - wordWidth);
            y = Math.min(10, windowHeight - wordHeight);
            break;
        case 1: // Lateral esquerdo centralizado
            x = Math.min(10, windowWidth - wordWidth);
            y = (windowHeight - wordHeight) / 2;
            break;
        case 2: // Canto superior central
            x = (windowWidth - wordWidth) / 2;
            y = Math.min(10, windowHeight - wordHeight);
            break;
        case 3: // Centralizado
            x = (windowWidth - wordWidth) / 2;
            y = (windowHeight - wordHeight) / 2;
            break;
        case 4: // Lateral direito centralizado
            x = Math.max(windowWidth - wordWidth - 10, 0);
            y = (windowHeight - wordHeight) / 2;
            break;
        case 5: // Canto superior direito
            x = Math.max(windowWidth - wordWidth - 10, 0);
            y = Math.min(10, windowHeight - wordHeight);
            break;
        case 6: // Canto inferior direito
            x = Math.max(windowWidth - wordWidth - 10, 0);
            y = Math.max(windowHeight - wordHeight - 10, 0);
            break;
        case 7: // Canto inferior esquerdo
            x = Math.min(10, windowWidth - wordWidth);
            y = Math.max(windowHeight - wordHeight - 10, 0);
            break;
        default:
            x = 0;
            y = 0;
            break;
    }

    wordElement.style.position = 'absolute';
    wordElement.style.left = `${x}px`;
    wordElement.style.top = `${y}px`;

    // Adiciona a classe para a anima√ß√£o de aparecimento
    document.body.appendChild(wordElement);
    setTimeout(() => {
        wordElement.classList.add('fade-in');
    }, 0);

    // Remove o elemento ap√≥s a anima√ß√£o de desaparecimento
    setTimeout(() => {
        wordElement.style.opacity = 0;
        setTimeout(() => {
            wordElement.remove();
        }, 2000); // Tempo para garantir que a anima√ß√£o de desaparecimento termine
    }, 10000); // Tempo para mostrar a palavra antes de desaparecer
}

// Inicia a cria√ß√£o de palavras de fundo
function startBackgroundWords() {
    setInterval(() => {
        const randomIndex = Math.floor(Math.random() * backgroundWords.length);
        const randomText = backgroundWords[randomIndex];
        createWordElement(randomText);
    }, 19000); // Tempo entre a cria√ß√£o de novas palavras, estava 15000
}

startBackgroundWords(); //vers√£o 0.0.6





